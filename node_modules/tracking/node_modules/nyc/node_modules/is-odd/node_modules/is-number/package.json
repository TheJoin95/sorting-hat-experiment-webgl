{
  "_from": "is-number@^4.0.0",
  "_id": "is-number@4.0.0",
  "_inBundle": false,
  "_integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ==",
  "_location": "/nyc/is-odd/is-number",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "is-number@^4.0.0",
    "name": "is-number",
    "escapedName": "is-number",
    "rawSpec": "^4.0.0",
    "saveSpec": null,
    "fetchSpec": "^4.0.0"
  },
  "_requiredBy": [
    "/nyc/is-odd"
  ],
  "_resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",
  "_shasum": "0026e37f5454d73e356dfe6564699867c6a7f0ff",
  "_shrinkwrap": null,
  "_spec": "is-number@^4.0.0",
  "_where": "/Users/benjamincoe/bcoe/nyc/node_modules/is-odd",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/is-number/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Jon Schlinkert",
      "url": "http://twitter.com/jonschlinkert"
    },
    {
      "name": "tunnckoCore",
      "url": "https://i.am.charlike.online"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Returns true if the value is a number. comprehensive tests.",
  "devDependencies": {
    "benchmarked": "^2.0.0",
    "chalk": "^2.1.0",
    "gulp-format-md": "^1.0.0",
    "mocha": "^3.0.1"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/is-number",
  "keywords": [
    "check",
    "coerce",
    "coercion",
    "integer",
    "is",
    "is-nan",
    "is-num",
    "is-number",
    "istype",
    "kind",
    "math",
    "nan",
    "num",
    "number",
    "numeric",
    "test",
    "type",
    "typeof",
    "value"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "is-number",
  "optionalDependencies": {},
  "readme": "# is-number [![NPM version](https://img.shields.io/npm/v/is-number.svg?style=flat)](https://www.npmjs.com/package/is-number) [![NPM monthly downloads](https://img.shields.io/npm/dm/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![NPM total downloads](https://img.shields.io/npm/dt/is-number.svg?style=flat)](https://npmjs.org/package/is-number) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/is-number.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/is-number)\n\n> Returns true if the value is a number. comprehensive tests.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save is-number\n```\n\n## Usage\n\nTo understand some of the rationale behind the decisions made in this library (and to learn about some oddities of number evaluation in JavaScript), [see this gist](https://gist.github.com/jonschlinkert/e30c70c713da325d0e81).\n\n```js\nvar isNumber = require('is-number');\n```\n\n### true\n\nSee the [tests](./test.js) for more examples.\n\n```js\nisNumber(5e3)      //=> 'true'\nisNumber(0xff)     //=> 'true'\nisNumber(-1.1)     //=> 'true'\nisNumber(0)        //=> 'true'\nisNumber(1)        //=> 'true'\nisNumber(1.1)      //=> 'true'\nisNumber(10)       //=> 'true'\nisNumber(10.10)    //=> 'true'\nisNumber(100)      //=> 'true'\nisNumber('-1.1')   //=> 'true'\nisNumber('0')      //=> 'true'\nisNumber('012')    //=> 'true'\nisNumber('0xff')   //=> 'true'\nisNumber('1')      //=> 'true'\nisNumber('1.1')    //=> 'true'\nisNumber('10')     //=> 'true'\nisNumber('10.10')  //=> 'true'\nisNumber('100')    //=> 'true'\nisNumber('5e3')    //=> 'true'\nisNumber(parseInt('012'))   //=> 'true'\nisNumber(parseFloat('012')) //=> 'true'\n```\n\n### False\n\nSee the [tests](./test.js) for more examples.\n\n```js\nisNumber('foo')             //=> 'false'\nisNumber([1])               //=> 'false'\nisNumber([])                //=> 'false'\nisNumber(function () {})    //=> 'false'\nisNumber(Infinity)          //=> 'false'\nisNumber(NaN)               //=> 'false'\nisNumber(new Array('abc'))  //=> 'false'\nisNumber(new Array(2))      //=> 'false'\nisNumber(new Buffer('abc')) //=> 'false'\nisNumber(null)              //=> 'false'\nisNumber(undefined)         //=> 'false'\nisNumber({abc: 'abc'})      //=> 'false'\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [even](https://www.npmjs.com/package/even): Get the even numbered items from an array. | [homepage](https://github.com/jonschlinkert/even \"Get the even numbered items from an array.\")\n* [is-even](https://www.npmjs.com/package/is-even): Return true if the given number is even. | [homepage](https://github.com/jonschlinkert/is-even \"Return true if the given number is even.\")\n* [is-odd](https://www.npmjs.com/package/is-odd): Returns true if the given number is odd. | [homepage](https://github.com/jonschlinkert/is-odd \"Returns true if the given number is odd.\")\n* [is-primitive](https://www.npmjs.com/package/is-primitive): Returns `true` if the value is a primitive.  | [homepage](https://github.com/jonschlinkert/is-primitive \"Returns `true` if the value is a primitive. \")\n* [kind-of](https://www.npmjs.com/package/kind-of): Get the native type of a value. | [homepage](https://github.com/jonschlinkert/kind-of \"Get the native type of a value.\")\n* [odd](https://www.npmjs.com/package/odd): Get the odd numbered items from an array. | [homepage](https://github.com/jonschlinkert/odd \"Get the odd numbered items from an array.\")\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 38 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 5 | [charlike](https://github.com/charlike) |\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on October 17, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/is-number.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "related": {
      "list": [
        "even",
        "is-even",
        "is-odd",
        "is-primitive",
        "kind-of",
        "odd"
      ]
    },
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    }
  },
  "version": "4.0.0"
}
