{
  "_from": "source-map-url@^0.4.0",
  "_id": "source-map-url@0.4.0",
  "_inBundle": false,
  "_integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=",
  "_location": "/nyc/source-map-url",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "source-map-url@^0.4.0",
    "name": "source-map-url",
    "escapedName": "source-map-url",
    "rawSpec": "^0.4.0",
    "saveSpec": null,
    "fetchSpec": "^0.4.0"
  },
  "_requiredBy": [
    "/nyc/source-map-resolve"
  ],
  "_resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",
  "_shasum": "3e935d7ddd73631b97659956d55128e87b5084a3",
  "_shrinkwrap": null,
  "_spec": "source-map-url@^0.4.0",
  "_where": "/Users/benjamincoe/bcoe/nyc/node_modules/source-map-resolve",
  "author": {
    "name": "Simon Lydell"
  },
  "bugs": {
    "url": "https://github.com/lydell/source-map-url/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Tools for working with sourceMappingURL comments.",
  "devDependencies": {
    "expect.js": "~0.3.1",
    "jshint": "~2.4.3",
    "mocha": "~1.17.1"
  },
  "homepage": "https://github.com/lydell/source-map-url#readme",
  "keywords": [
    "source map",
    "sourceMappingURL",
    "comment",
    "annotation"
  ],
  "license": "MIT",
  "main": "source-map-url.js",
  "name": "source-map-url",
  "optionalDependencies": {},
  "readme": "Overview [![Build Status](https://travis-ci.org/lydell/source-map-url.png?branch=master)](https://travis-ci.org/lydell/source-map-url)\n========\n\n[![browser support](https://ci.testling.com/lydell/source-map-url.png)](https://ci.testling.com/lydell/source-map-url)\n\nTools for working with sourceMappingURL comments.\n\n```js\nvar sourceMappingURL = require(\"source-map-url\")\n\nvar code = [\n  \"!function(){...}();\",\n  \"/*# sourceMappingURL=foo.js.map */\"\n].join(\"\\n\")\n\nsourceMappingURL.existsIn(code)\n// true\n\nsourceMappingURL.getFrom(code)\n// foo.js.map\n\ncode = sourceMappingURL.insertBefore(code, \"// License: MIT\\n\")\n// !function(){...}();\n// // License: MIT\n// /*# sourceMappingURL=foo.js.map */\n\ncode = sourceMappingURL.removeFrom(code)\n// !function(){...}();\n// // License: MIT\n\nsourceMappingURL.existsIn(code)\n// false\n\nsourceMappingURL.getFrom(code)\n// null\n\ncode += \"//# sourceMappingURL=/other/file.js.map\"\n// !function(){...}();\n// // License: MIT\n// //# sourceMappingURL=/other/file.js.map\n```\n\n\nInstallation\n============\n\n- `npm install source-map-url`\n- `bower install source-map-url`\n- `component install lydell/source-map-url`\n\nWorks with CommonJS, AMD and browser globals, through UMD.\n\n\nUsage\n=====\n\n### `sourceMappingURL.getFrom(code)` ###\n\nReturns the url of the sourceMappingURL comment in `code`. Returns `null` if\nthere is no such comment.\n\n### `sourceMappingURL.existsIn(code)` ###\n\nReturns `true` if there is a sourceMappingURL comment in `code`, or `false`\notherwise.\n\n### `sourceMappingURL.removeFrom(code)` ###\n\nRemoves the sourceMappingURL comment in `code`. Does nothing if there is no\nsuch comment. Returns the updated `code`.\n\n### `sourceMappingURL.insertBefore(code, string)` ###\n\nInserts `string` before the sourceMappingURL comment in `code`. Appends\n`string` to `code` if there is no such comment.\n\nLets you append something to a file without worrying about burying the\nsourceMappingURL comment (by keeping it at the end of the file).\n\n### `sourceMappingURL.regex` ###\n\nThe regex that is used to match sourceMappingURL comments. It matches both `//`\nand `/**/` comments, thus supporting both JavaScript and CSS.\n\n\nTests\n=====\n\nStart by running `npm test`, which lints the code and runs the test suite in Node.js.\n\nTo run the tests in a browser, run `testling` (`npm install -g testling`) or `testling -u`.\n\n\nLicense\n=======\n\n[The X11 (“MIT”) License](LICENSE).\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lydell/source-map-url.git"
  },
  "scripts": {
    "lint": "jshint source-map-url.js test/ ",
    "test": "npm run lint && npm run unit",
    "unit": "mocha"
  },
  "testling": {
    "harness": "mocha",
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "chrome/latest",
      "firefox/latest",
      "opera/12",
      "opera/latest",
      "safari/5",
      "iphone/6",
      "android-browser/4"
    ]
  },
  "version": "0.4.0"
}
